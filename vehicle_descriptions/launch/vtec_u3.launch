<launch>
  <!-- Debug flag -->
  <arg name="debug" default="0"/>

  <!-- Vehicle's initial pose -->
  <arg name="x"     default="10"/>
  <arg name="y"     default="5"/>
  <arg name="z"     default="-50"/>
  <arg name="roll"  default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw"   default="1.570796"/>
  <arg name="allow_trajectory_execution" default="true"/>

  <!-- <arg name="use_geodetic" default="false"/>
  <arg name="latitude" default="0"/>
  <arg name="longitude" default="0"/>
  <arg name="depth" default="0"/>

  <arg name="latitude_ref" default="0"/>
  <arg name="longitude_ref" default="0"/>
  <arg name="altitude_ref" default="0"/> -->

  <!-- Mode to open different robot configurations as set the in file
  nomenclature standard for the files in /robots

  /robots/<mode>.xacro
  -->
  <arg name="mode" default="vtec_u3"/>

  <!-- Vehicle's namespace -->
  <arg name="namespace" default="vtec_u3"/>

  <arg name="world_frame" default="world_ned"/>


  <group ns="$(arg namespace)">
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(find vehicle_descriptions)/robots/$(arg mode).xacro' debug:=$(arg debug) namespace:=$(arg namespace)" />
    
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg namespace) -param /$(arg namespace)/robot_description"/>

    <!-- A joint state publisher plugin already is started with the model, no need to use the default joint state publisher -->

    <!-- Publish robot model for ROS -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
      <param name="robot_description" value="/$(arg namespace)/robot_description" />
    </node>

      <!-- <include file="$(find vehicle_descriptions)/launch/peripherals.launch" /> -->   
  </group> 
    <!-- Enable camera gazebo plugin-->
  <include file="$(find realsense_gazebo_plugin)/launch/depth_procfront.launch">
  </include>
  <!-- Sensors Functionality -->
  <!-- <include ns="move_group" file="$(find ur_with_cam_gazebo)/launch/inc/sensor_manager2.launch.xml" if="$(arg allow_trajectory_execution)">
  </include>-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_to_body_broadcast" args="0.19281 0.01961 0.06659 0 0 0 vtec_u3_base_link frontrs200_camera" /> 
  <!-- <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="1 0 0 0 0 0 1 vtec_u3_base_link frontrs200_camera 100" />-->

</launch>
 