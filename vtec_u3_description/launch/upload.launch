<launch>
  <!-- Debug flag -->
  <arg name="debug" default="0"/>

  <!-- Vehicle's initial pose -->
  <arg name="x"     default="-3.5"/>
  <arg name="y"     default="-10"/>
  <arg name="z"     default="-6.5"/>
  <arg name="roll"  default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw"   default="1.570796"/>

  <arg name="use_geodetic" default="false"/>
  <arg name="latitude" default="0"/>
  <arg name="longitude" default="0"/>
  <arg name="depth" default="0"/>

  <arg name="latitude_ref" default="0"/>
  <arg name="longitude_ref" default="0"/>
  <arg name="altitude_ref" default="0"/>

  <!-- Mode to open different robot configurations as set the in file
  nomenclature standard for the files in /robots

  /robots/<mode>.xacro
  -->
  <arg name="mode" default="vtec_u3_default"/>

  <!-- Vehicle's namespace -->
  <arg name="namespace" default="vtec_u3"/>

  <arg name="world_frame" default="world"/>


  <group ns="$(arg namespace)">
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(find vtec_u3_description)/robots/$(arg mode).xacro' debug:=$(arg debug) namespace:=$(arg namespace)" />
    
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg namespace) -param /$(arg namespace)/robot_description"/>

    <!-- A joint state publisher plugin already is started with the model, no need to use the default joint state publisher -->

    <!-- Publish robot model for ROS -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
      <param name="robot_description" value="/$(arg namespace)/robot_description" />
    </node>

      <!-- <include file="$(find vtec_u3_description)/launch/peripherals.launch" /> -->   
  </group> 

</launch>
 