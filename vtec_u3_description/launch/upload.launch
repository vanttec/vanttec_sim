<launch>
  <!-- Debug flag -->
  <arg name="debug" default="0"/>

  <!-- Vehicle's initial pose -->
  <arg name="x"     default="0"/>
  <arg name="y"     default="0"/>
  <arg name="z"     default="0"/>
  <arg name="roll"  default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw"   default="0"/>

  <arg name="use_geodetic" default="false"/>
  <arg name="latitude" default="0"/>
  <arg name="longitude" default="0"/>
  <arg name="depth" default="0"/>

  <arg name="latitude_ref" default="0"/>
  <arg name="longitude_ref" default="0"/>
  <arg name="altitude_ref" default="0"/>

  <!-- Mode to open different robot configurations as set the in file
  nomenclature standard for the files in /robots
  /robots/<mode>.xacro
  -->
  <arg name="mode" default="vtec_u3_default"/>

  <!-- Vehicle's namespace -->
  <arg name="namespace" default="vtec_u3"/>

  <arg name="world_frame" default="world"/>


  <group ns="$(arg namespace)">
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(find vtec_u3_description)/robots/$(arg mode).xacro' debug:=$(arg debug) namespace:=$(arg namespace)" />
    
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg namespace) -param /$(arg namespace)/robot_description"/>

    <!-- A joint state publisher plugin already is started with the model, no need to use the default joint state publisher -->

    <!-- Publish robot model for ROS -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
      <param name="robot_description" value="/$(arg namespace)/robot_description" />
    </node>

      <!-- <include file="$(find vtec_u3_description)/launch/peripherals.launch" /> -->   
  </group> 

  <!-- Begin Gate -->
  <group ns="Octagon">
    <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find sim_challenges)/urdf/octagon.xacro' "/>  
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -param robot_description -model octagon_1"/> 
  </group>

    <!-- Begin Gate -->
  <!-- <group ns="Gate">
    <param name="robot_description"
      command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/gate.xacro' "/>  
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -param robot_description -model gate_1"/> 
  </group> -->
  
  <!-- Begin Buoy1 (GUN) -->
  <!-- <group ns="Buoy1"> -->
    <!-- <param name="tf_prefix" value="robot3_tf" /> -->
    <!-- <param name="robot_description" -->
          <!-- command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/buoy.xacro' "/>  -->
    <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" -->
          <!-- args="-urdf -param robot_description -model buoy_1"/> -->
  <!-- </group> -->

  <!-- Begin Buoy2-->

  <!-- <group ns="Buoy2"> -->
  <!-- <param name="tf_prefix" value="robot3_tf" />  -->
      <!-- <param name="robot_description"  -->
          <!-- command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/buoy2.xacro' "/>   -->
      <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"  -->
          <!-- args="-urdf -param robot_description -model buoy_2"/>  -->
  <!-- </group> -->

  <!-- Begin Octagon -->

  <!-- <group ns="Octagon"> -->
    <!-- <param name="tf_prefix" value="robot3_tf" /> -->
    <!-- <param name="robot_description" -->
          <!-- command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/octagon.xacro' "/>  -->
    <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" -->
          <!-- args="-urdf -param robot_description -model octagon_1"/> -->
  <!-- </group> -->

  <!-- Begin Bin1-->

  <!-- <group ns="Bin1"> -->
    <!-- <param name="tf_prefix" value="robot3_tf" /> -->
    <!-- <param name="robot_description" -->
          <!-- command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/bin1.xacro' "/>  -->
    <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" -->
          <!-- args="-urdf -param robot_description -model bin_1"/> -->
  <!-- </group> -->

  <!-- Begin Bin2-->

  <!-- <group ns="Bin2"> -->
    <!-- <param name="tf_prefix" value="robot3_tf" /> -->
    <!-- <param name="robot_description" -->
          <!-- command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/bin2.xacro' "/>  -->
    <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" -->
          <!-- args="-urdf -param robot_description -model bin_2"/> -->
  <!-- </group> -->

  <!-- Begin Torpedo1 -->
  <!-- <group ns="Torpedo1"> -->
    <!-- <param name="tf_prefix" value="robot3_tf" /> -->
    <!-- <param name="robot_description" -->
          <!-- command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/torpedos1.xacro' "/>  -->
    <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" -->
          <!-- args="-urdf -param robot_description -model torpedos_1"/> -->
  <!-- </group> -->

  <!-- Begin Torpedo2-->
  <!-- <group ns="Torpedo2"> -->
    <!-- <param name="tf_prefix" value="robot3_tf" /> -->
    <!-- <param name="robot_description" -->
          <!-- command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/torpedos2.xacro' "/>  -->
    <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" -->
          <!-- args="-urdf -param robot_description -model torpedos_2"/> -->
  <!-- </group>   -->

  <!-- Begin Path marker-->
  <!-- <group ns="Pathmarker">
    <param name="tf_prefix" value="robot3_tf" />
    <param name="robot_description"
          command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/pathmarker.xacro' "/> 
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -param robot_description -model path_marker"/>
  </group> -->

  <!-- Begin Double Path Marker -->
  <!-- <group ns="Pathmarker_double">
    <param name="tf_prefix" value="robot3_tf" />
    <param name="robot_description"
          command="$(find xacro)/xacro - -inorder '$(find sim_challenges)/urdf/pathmarker2.xacro' "/> 
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -param robot_description -model path_marker2"/>
  </group> -->

  <!-- Enable camera gazebo plugin-->
  <include file="$(find realsense_gazebo_plugin)/launch/depth_procfront.launch">
  </include>

 <!--  <include file="$(find realsense_gazebo_plugin)/launch/depth_procdown.launch">-->
 <!--  </include>-->
    <!-- check if you are simulating robot with gazebo -->
  <arg  name="gazebo" default="false" />
  <group unless="$(arg gazebo)">
  </group>

</launch>
 